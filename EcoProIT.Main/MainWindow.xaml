<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:iassembly="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:View="clr-namespace:EcoProIT.UserControles.View;assembly=EcoProIT.UserControles"
    xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"
        xmlns:concept="clr-namespace:EcoProIT.Main"
    xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
    xmlns:HelpClasses="clr-namespace:HelpClasses;assembly=HelpClasses"
    xmlns:my="clr-namespace:EcoProIT.UserControles;assembly=EcoProIT.UserControles"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    mc:Ignorable="d"
        x:Class="EcoProIT.Main.MainWindow"
        Title="EcoProIT Tool" Height="738" WindowState="Maximized" Icon="Resources\Icon.ico" Width="1529.95">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Template.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <HelpClasses:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>

    </Window.Resources>

    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>

    <DockPanel x:Name="dockPanel1"  LastChildFill="true" Margin="0,0,0,0">
        <WrapPanel DockPanel.Dock="Bottom" Margin="0,0,0,0" HorizontalAlignment="Stretch" >
            <StackPanel>
                <ComboBox x:Name="box" ItemsSource="{Binding NewNodes}" SelectedValue="{Binding SelectedNewNode}"  Height="24" VerticalAlignment="Top" Width="118" SelectedIndex="0"/>
                <Label Height="63"  Width="118"  Content="{Binding NewNode}"/>
            </StackPanel>
            <DockPanel>
                <Button DockPanel.Dock="Top" Height="37" Content=" Export Model to Run" Command="{Binding MyButtonClickAction}" />
                <Label Content="Simulation Time" DockPanel.Dock="Top"/>
                <StackPanel Orientation="Horizontal" Height="27" DockPanel.Dock ="Bottom">
                    <xctk:IntegerUpDown MinWidth="55" Value="{Binding SimulationTime}" />
                    <ComboBox SelectedIndex="0" SelectedValue="{Binding SimulationTimeUnit, Mode=OneWayToSource}">
                        <ListBoxItem Content="Hours"/>
                        <ListBoxItem Content="Weeks"/>
                        <ListBoxItem Content="Years"/>


                    </ComboBox>
                </StackPanel>

            </DockPanel>
            <Button Content=" Load Model " Click="Click_Load" />
            <Button Content=" Save Model " Click="Click_Save" />
            <Button x:Name="_newProduct" Content=" New Product " Click="_newProduct_Click_1"/>
            <Button Content="{Binding RetrieveResult}" IsEnabled="{Binding HasResult}" x:Name="ShowHideResults" Click="Retrive_Results" />
            <Image Height="100" Width="105" AllowDrop="True" Source="Resources/trash.png" Drop="Image_Drop_1"/>
        </WrapPanel>
        <StackPanel DockPanel.Dock="Right"  HorizontalAlignment="Right" Width="252" >
            <my:Products x:Name="Products"  MinHeight="89" VerticalAlignment="Bottom"/>
            <Label Content="Job Definition" Height="26" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="102"/>
            <!--<DataGrid DataContext="{Binding SelectedProduct}" ItemsSource="{Binding Nodes}"  Background="Transparent" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn MinWidth="18" Header="Remove">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Delete"
                                    Command="{Binding Path=DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}
                                              }"
                                    CommandParameter="{Binding}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn  Header="Node" Binding="{Binding Key.ResourceModel.ProcessName, Mode=OneWay}"
                                    CanUserReorder="True" />

                    <DataGridComboBoxColumn Header="Job" ItemsSource="{Binding Key.DeclaredJob}" DisplayMemberPath="Name"></DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>-->
            <ListBox ItemsSource="{Binding SelectedProduct.Nodes}" Background="Transparent" MinHeight="183"  VerticalAlignment="Top">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="97*"/>
                                <ColumnDefinition Width="97*"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="100*"/>
                            </Grid.ColumnDefinitions>
                            <Button Content="Delete" Grid.Column="0"
                                    Command="{Binding DataContext.SelectedProduct.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                    CommandParameter="{Binding}" />
                            <Label  Grid.Column="1" Content="{Binding Key.ResourceModel.ProcessName}" />
                            <ComboBox Grid.Column="2"  ItemsSource="{Binding Key.DeclaredJobs}" SelectedValue="{Binding Value}"/>
                            <Button Grid.Column="3" Content="Up" Command="{Binding DataContext.SelectedProduct.MoveUpCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                    CommandParameter="{Binding}" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel  Visibility="{Binding ShowResults, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox Margin="0,0,0,0"  ItemsSource="{Binding TotalNodeConsumebles}" DisplayMemberPath="Key" SelectedValuePath="Key" SelectedValue="{Binding SelectedResultConsumable}"  VerticalAlignment="Top" />
                <chartingToolkit:Chart Height="200"  Title="{Binding SelectedResultConsumable}"   >
                    <chartingToolkit:Chart.LegendStyle>
                        <Style TargetType="{x:Type Control}">
                            <Setter Property="Width" Value="0" />
                            <Setter Property="Height" Value="0" />
                        </Style>
                    </chartingToolkit:Chart.LegendStyle>
                    <!--<chartingToolkit:ColumnSeries ItemsSource="{Binding Result.Consumables}" 
        			    DependentValuePath="Value"
        			    IndependentValuePath="Key.Name"/>-->

                    <chartingToolkit:ColumnSeries ItemsSource="{Binding SelectedResultNodeConsumables}" 
        			    DependentValuePath="Value"
        			    IndependentValuePath="Key">
                            <chartingToolkit:ColumnSeries.DependentRangeAxis>
                                <chartingToolkit:LinearAxis Title="{Binding AxisUnit}" Orientation="Y" Minimum="0" >
                                </chartingToolkit:LinearAxis>
                            </chartingToolkit:ColumnSeries.DependentRangeAxis>
                            <chartingToolkit:ColumnSeries.DataPointStyle>
                                <Style TargetType="chartingToolkit:ColumnDataPoint">
                                    <Setter Property="Background" Value="#FF009E32"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="chartingToolkit:ColumnDataPoint">
                                                <Grid>
                                                    <Rectangle
                                                Fill="{TemplateBinding Background}"
                                                Stroke="Black"/>
                                                    <Grid.ToolTip>
                                                        <ToolTip Content="{TemplateBinding FormattedDependentValue}"></ToolTip>
                                                    </Grid.ToolTip>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </chartingToolkit:ColumnSeries.DataPointStyle>
                        </chartingToolkit:ColumnSeries>
                </chartingToolkit:Chart>
            </StackPanel>

        </StackPanel>



        <ItemsControl ItemsSource="{Binding GridUIElement}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid  DockPanel.Dock="Left" Background="Transparent" AllowDrop="True" Drop="LayoutRoot2_OnDrop" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <!--
        <ItemsControl ItemsSource="{Binding GridUIElement}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid DockPanel.Dock="Left"  />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
         </ItemsControl>
        -->
        <!--<my:ModelNode HorizontalAlignment="Left" Margin="96,81,0,0" x:Name="modelNode1"
        		VerticalAlignment="Top" Width="107" Height="63" Text="Production" MouseLeftButtonUp="NewNodeOnMouseLeftButtonUp"/>
            <my:ModelNode Height="63" Margin="359,81,0,0" x:Name="modelNode2"
        		VerticalAlignment="Top" HorizontalAlignment="Left" Width="107" Text="Distribution"  MouseLeftButtonUp="NewNodeOnMouseLeftButtonUp"/>
            <my:ModelNode Height="63" HorizontalAlignment="Left" Margin="644,81,0,0" x:Name="modelNode3"
        		VerticalAlignment="Top" Width="107" Text="Usage"  MouseLeftButtonUp="NewNodeOnMouseLeftButtonUp"/>
            <my:ModelNode Height="63" HorizontalAlignment="Left" Margin="900,81,0,0" x:Name="modelNode4"
        		VerticalAlignment="Top" Width="107" Text="Recycle"  MouseLeftButtonUp="NewNodeOnMouseLeftButtonUp"/>-->



    </DockPanel>
</Window>